[General]
network = StaticSpoofing

*.radioMedium.backgroundNoise.power = -100dBm

# no configurator needed (there is no communication between hosts)
**.networkConfiguratorModule = ""

# scene visualization
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 400m
*.visualizer.osgVisualizer.sceneVisualizer.clearColor = "skyblue"
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m

# medium visualization
*.visualizer.osgVisualizer.mediumVisualizer.displaySignals = true
*.visualizer.osgVisualizer.mediumVisualizer.signalColor = "red"
*.visualizer.osgVisualizer.mediumVisualizer.signalFadingDistance = 50m
*.visualizer.osgVisualizer.mediumVisualizer.signalRingSize = 50m
*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "ring"

# network node visualization
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = false

# mobility visualization
*.visualizer.osgVisualizer.mobilityVisualizer.displayMobility = true
*.visualizer.osgVisualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.osgVisualizer.mobilityVisualizer.displayOrientations = true
*.visualizer.osgVisualizer.mobilityVisualizer.displayPositions = true
*.visualizer.osgVisualizer.mobilityVisualizer.displayVelocities = true

# Remote ID beaconing
*.host[*].wlan[*].radio.channelNumber = 6
*.host[*].wlan[*].radio.transmitter.power = 20mW
*.host[*].wlan[0].mgmt.serialNumber = ancestorIndex(2)

[Config PerpendicularDrones]

sim-time-limit = 25s 

*.numHosts = 2

*.host[*].osgModel = "3d/drone.ive.25.scale.0,0,90.rot"

*.host[*].wlan[0].mgmt.beaconInterval = 500ms

*.host[*].mobility.typename = "LinearMobility"
*.host[*].mobility.initialMovementElevation = 0deg
*.host[*].mobility.initFromDisplayString = false

*.host[*].mobility.statistic-recording = true
*.host[*].mobility.xPos:vector.vector-recording = true
*.host[*].mobility.yPos:vector.vector-recording = true
*.host[*].mobility.zPos:vector.vector-recording = true

*.host[0].mobility.initialX = 150m
*.host[0].mobility.initialY = 75m
*.host[0].mobility.initialZ = 50m
*.host[0].mobility.initialMovementHeading = 90deg
*.host[0].mobility.speed = 5mps
*.host[0].typename = "SingleSampleDetectHost"

*.host[1].mobility.initialX = 0m
*.host[1].mobility.initialY = 50m
*.host[1].mobility.initialZ = 50m
*.host[1].mobility.initialMovementHeading = 0deg
*.host[1].mobility.speed = 15mps

# make host 1 into a spoofer
*.host[1].typename = "StaticLocationSpooferHost"
*.host[1].wlan[0].mgmt.spoofPosX = 150
*.host[1].wlan[0].mgmt.spoofPosY = 250
*.host[1].wlan[0].mgmt.spoofPosZ = 150


